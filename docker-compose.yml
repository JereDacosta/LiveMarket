networks:
  live-market-network:
    driver: bridge

services:
  live-market:
    build:
      context: ./
      dockerfile: LiveMarket/Dockerfile
    image: live-market
    container_name: live-market
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    networks:
      - live-market-network

  xbox-store:
    build:
      context: ./
      dockerfile: XboxStore/Dockerfile
    image: xbox-store
    container_name: xbox-store
    ports:
      - "8081:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    networks:
      - live-market-network

  playstation-store:
    build:
      context: ./
      dockerfile: PlaystationStore/Dockerfile
    image: playstation-store
    container_name: playstation-store
    ports:
      - "8082:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    networks:
      - live-market-network

  conversion-service:
    build:
      context: ./
      dockerfile: ConversionService/Dockerfile
    image: conversion-service
    container_name: conversion-service
    ports:
      - "8083:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    networks:
      - live-market-network

  book-store:
    build:
      context: ./
      dockerfile: BookStore/Dockerfile
    image: book-store
    container_name: book-store
    ports:
      - "8084:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    networks:
      - live-market-network

  otel-collector:
    build:
      context: ./otel-collector
      dockerfile: Dockerfile
    image: otel-collector
    container_name: otel-collector
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "55679:55679" # zpages extension
      - "55670:55670" # OTLP HTTP
      - "9464:9464"   # Prometheus metrics endpoint
    networks:
      - live-market-network

  jaeger:
    image: jaegertracing/opentelemetry-all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686"
      - "14268"
      - "14250"
    networks:
      - live-market-network

  prometheus:
    build:
      context: ./prometheus
      dockerfile: Dockerfile
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090" # Prometheus web UI
    networks:
      - live-market-network

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    networks:
      - live-market-network

  loki:
    image: grafana/loki:2.9.2
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - live-market-network

  promtail:
    image: grafana/promtail:2.9.2
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - live-market-network


